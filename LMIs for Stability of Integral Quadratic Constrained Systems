%% MAE598, Wikibook project, LMIs for Stability of Integral Quadratic Constrained Systems
%% Mohammad Khajenejad, 1211351359 
%addpath(genpath('Macintosh HD\Users\mkhajene\Downloads\sedumi'));
%% System matirces and the initail state value should be inputted
function Integral_Quadratic_Constrained_Stability(A,Bp,Cq,Dqp)
np=size(Bp,2);
solver=sdpsettings('solver', 'sedumi', 'sedumi.eps', 1e-8, ...
                'sedumi.cg.qprec', 1, 'sedumi.cg.maxiter', 49, ...
                'sedumi.stepdif', 2);
%% variables
lambda=sdpvar(1);
%Lambda=diag(lambda);
%t=sdpvar(np,1);
%T=diag(t);
%gamma=sdpvar(1);
P=sdpvar(size(A,2),size(A,1));
S=[A'*P+P*A+lambda*Cq'*Cq P*Bp+lambda*Cq'*Dqp...
  ;(P*Bp+lambda*Cq'*Dqp)' lambda*(eye(size(Dqp,2))-Dqp'*Dqp)];
 % ;(P*Bw)' (Lambda*Cq*Bw)' -(gamma)*eye(size(Bw,2))];
%% constraints
const=[P>=eps*eye(size(A,2));lambda>=0];
const=[const;S<=-eps*eye(size(S,1))];
 %% objective
 obj=[];
 %% solution
 sol=optimize(const,obj,solver);
 %en=value(obj);
 if sol.problem==0
  disp('System is stable') 
 else
     disp('System is not stable')
 end
 
 %sqrt(value(obj))
 
end
